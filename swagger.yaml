openapi: 3.0.0
info:
  title: Jobs API
  description: ''
  contact: {}
  version: '1.0'
servers:
- url: https://node-jobs-api-7e2e.onrender.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register
      operationId: Register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterRequest'
              - example:
                  name: Mike
                  email: mike@yahoo.com
            example:
              name: Mike
              email: mike@yahoo.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginRequest'
              - example:
                  email: tommy@tester.com
                  password: secret
            example:
              email: tommy@tester.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobRequest'
              - example:
                  company: Miami Marlins
                  position: frontend dev
            example:
              company: Miami Marlins
              position: frontend dev
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
      - Jobs
      summary: get Jobs
      operationId: getJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The jobs ID
    get:
      tags:
      - Jobs
      summary: get Job
      operationId: getJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    patch:
      tags:
      - Jobs
      summary: update Job
      operationId: updateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/updateJobRequest'
              - example:
                  company: target
                  position: back end dev
            example:
              company: target
          red: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - Jobs
      summary: delete Job
      operationId: deleteJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterRequest:
      title: RegisterRequest
      required:
      - name
      - email
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      example:
        name: Mike
        email: mike@yahoo.com
    LoginRequest:
      title: LoginRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: tommy@tester.com
        password: secret
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Miami Marlins
        position: frontend dev
    updateJobRequest:
      title: updateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: target
        position: back end dev
    deleteJobRequest:
      title: deleteJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: target
        position: back end dev
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''
